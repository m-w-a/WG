#ifndef WG_AUTOFUNCTION2_HH_
#define WG_AUTOFUNCTION2_HH_

#include <boost/preprocessor.hpp>
#include <boost/local_function/detail/preprocessor/keyword/facility/is.hpp>
#include <WG/Utils/PP.hh>
#include <WG/Utils/PP_Seq.hh>
#include <WG/Utils/PP_AltSeq.hh>

#define WG_PP_AUTOFUNCTION_TOKEN_MATCHES6_assignto (1) /* unary */
#define WG_PP_TOKENS_STARTS_WITH_ASSIGNTO(tokens) \
  BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_FACILITY_IS_FRONT( \
    tokens, \
    WG_PP_AUTOFUNCTION_TOKEN_MATCHES6_)

#define WG_PP_AUTOFUNCTION_TOKEN_MATCHES7_return (1) /* unary */
#define WG_PP_TOKENS_STARTS_WITH_RETURN(tokens) \
  BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_FACILITY_IS_FRONT( \
    tokens, \
    WG_PP_AUTOFUNCTION_TOKEN_MATCHES7_)

#define WG_PP_AUTOFUNCTION_TOKEN_MATCHES8_parambind (1) /* unary */
#define WG_PP_TOKENS_STARTS_WITH_PARAMBIND(tokens) \
    BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_FACILITY_IS_FRONT( \
    tokens, \
    WG_PP_AUTOFUNCTION_TOKEN_MATCHES8_)

#define WG_PP_AUTOFUNCTION_TOKEN_MATCHES9_paramset (1) /* unary */
#define WG_PP_TOKENS_STARTS_WITH_PARAMSET(tokens) \
  BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_FACILITY_IS_FRONT( \
    tokens, \
    WG_PP_AUTOFUNCTION_TOKEN_MATCHES9_)

#define WG_PP_AUTOFUNCTION_TOKEN_MATCHES10_membind (1) /* unary */
#define WG_PP_TOKENS_STARTS_WITH_MEMBIND(tokens) \
  BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_FACILITY_IS_FRONT( \
    tokens, \
    WG_PP_AUTOFUNCTION_TOKEN_MATCHES10_)

#define WG_PP_AUTOFUNCTION_TOKEN_MATCHES11_memset (1) /* unary */
#define WG_PP_TOKENS_STARTS_WITH_MEMSET(tokens) \
  BOOST_LOCAL_FUNCTION_DETAIL_PP_KEYWORD_FACILITY_IS_FRONT( \
    tokens, \
    WG_PP_AUTOFUNCTION_TOKEN_MATCHES11_)

#define WG_PP_AUTOFUNCTION_TUPLIZE_assignto (assignto)
#define WG_PP_AUTOFUNCTION_TUPLIZE_return (return)
#define WG_PP_AUTOFUNCTION_TUPLIZE_parambind (return)

////Don't forget trailing BOOST_PP_EMPTY add BOOST_PP_COMMA()
////#define WG_PP_AUTOFUNCTION_PROCESS_ASSIGNTO_IMPL1
//
//#define WG_PP_AUTOFUNCTION_PROCESS_ASSIGNTO_0(spec) \
//  BOOST_PP_EMPTY BOOST_PP_COMMA() WG_PP_AUTOFUNCTION_PROCESS_RETURN(spec)
//#define WG_PP_AUTOFUNCTION_PROCESS_ASSIGNTO_1(spec) \
//  WG_PP_AUTOFUNCTION_PROCESS_ASSIGNTO_IMPL1( \
//    BOOST_PP_CAT(WG_PP_AUTOFUNCTION_TUPLIZE_, spec))
//#define WG_PP_AUTOFUNCTION_PROCESS_ASSIGNTO(spec) \
//  BOOST_PP_CAT( \
//    WG_PP_AUTOFUNCTION_PROCESS_ASSIGNTO_, \
//    WG_PP_TOKENS_STARTS_WITH_ASSIGNTO(spec)) (spec)
//
////Don't forget trailing BOOST_PP_EMPTY add BOOST_PP_COMMA()
////#define WG_PP_AUTOFUNCTION_PROCESS_RETURN_IMPL1
//
//#define WG_PP_AUTOFUNCTION_PROCESS_RETURN_0(spec) \
//  BOOST_PP_EMPTY BOOST_PP_COMMA() WG_PP_AUTOFUNCTION_PROCESS_PARAMBIND(spec)
//#define WG_PP_AUTOFUNCTION_PROCESS_RETURN_1(spec) \
//  WG_PP_AUTOFUNCTION_PROCESS_RETURN_IMPL1( \
//    BOOST_PP_CAT(WG_PP_AUTOFUNCTION_TUPLIZE_, spec))
//#define WG_PP_AUTOFUNCTION_PROCESS_RETURN(spec) \
//  BOOST_PP_CAT( \
//    WG_PP_AUTOFUNCTION_PROCESS_RETURN_, \
//    WG_PP_TOKENS_STARTS_WITH_RETURN(spec)) (spec)
//
////Don't forget trailing BOOST_PP_EMPTY add BOOST_PP_COMMA()
////#define WG_PP_AUTOFUNCTION_PROCESS_PARAMBIND_IMPL1
//
//#define WG_PP_AUTOFUNCTION_PROCESS_PARAMBIND_0(spec) \
//  BOOST_PP_EMPTY BOOST_PP_COMMA() WG_PP_AUTOFUNCTION_PROCESS_PARAMSET(spec)
//#define WG_PP_AUTOFUNCTION_PROCESS_PARAMBIND_1(spec) \
//  WG_PP_AUTOFUNCTION_PROCESS_PARAMBIND_IMPL1( \
//    BOOST_PP_CAT(WG_PP_AUTOFUNCTION_TUPLIZE_, spec))
//#define WG_PP_AUTOFUNCTION_PROCESS_PARAMBIND(spec) \
//  BOOST_PP_CAT( \
//    WG_PP_AUTOFUNCTION_PROCESS_PARAMBIND_, \
//    WG_PP_TOKENS_STARTS_WITH_PARAMBIND(spec)) (spec)




//#define WG_PP_AUTOFUNCTION_PROCESS_SPEC_IMPL(spec, currentkeyword, nextkeyword) \
//  BOOST_PP_IIF( \
//    BOOST_PP_CAT(WG_PP_TOKENS_STARTS_WITH_, currentkeyword) (spec), \
//    BOOST_PP_CAT(WG_PP_AUTOFUNCTION_PROCESSIMPL_, currentkeyword) (spec) \
//      WG_PP_AUTOFUNCTION_SPEC_TRAILINGTOKENS BOOST_PP_EMPTY, \
//    WG_PP_AUTOFUNCTION_SPEC_LEADINGTOKENS \
//      BOOST_PP_CAT( \
//        WG_PP_AUTOFUNCTION_PROCESS_, \
//        nextkeyword) BOOST_PP_EMPTY)() (spec)
//
//#define WG_PP_AUTOFUNCTION_PROCESSIMPL_ASSIGNTO(spec) (assignto)
//#define WG_PP_AUTOFUNCTION_PROCESS_ASSIGNTO(spec) \
//  WG_PP_AUTOFUNCTION_PROCESS_SPEC_IMPL(spec, ASSIGNTO, RETURN)
//
//#define WG_PP_AUTOFUNCTION_PROCESSIMPL_RETURN(spec) (return)
//#define WG_PP_AUTOFUNCTION_PROCESS_RETURN(spec) \
//  WG_PP_AUTOFUNCTION_PROCESS_SPEC_IMPL(spec, RETURN, PARAMBIND)


#endif /* WG_AUTOFUNCTION2_HH_ */
