The client-fill portion is by default private.

A hook for the generated constructor maybe specified via a method with the 
following signature: "void init()".

//----------
//Semantics:
//----------

Note: All terms not defined here should be referenced in AutoFunctorSpec.txt

memdecl:
  1) Will generate member variables for the local class.
  2) Said member variables will be declared in the 
    order that they appeared in the user specified macro.
  3) Will generate parameters for the public constructor necessary to initialize  
    said member variables.

memlike:
  1) Will generate member variables with the same types as those variables with 
    the same name in the enclosing scope(s). 
  2) Said member variables will be declared in the 
    order that they appeared in the user specified macro.
  3) Will generate parameters for the public constructor necessary to initialize  
    said member variables.

memset:
  1) Will generate member variables initialized to the user specified expressions. 
    Such exressions may reference previously declared member variables.
  2) Said member variables will be declared in the order that they appeared in  
    the user specified macro.
  3) If implicitly typed, the types of the member variables are deduced from
  the types of the user specified expressions via BOOST_TYPEOF.

//---
//BNF
//---

special symbols:
  [...] specifies an optional BNF expression.
terminals: derives memlike memset

lclclass-usage :=
  lclclass-start-macro ( name , lclclass-spec )
  member-specification
  WG_LCLCLASS_END [;]
  
lclclass-start-macro :=
    WG_LCLCLASS
  | WG_LCLCLASS_TPL

lclclass-spec :=
  [derives derives-seq]
  [memdecl memdecl-tuple-seq]
  [memlike memlike-tuple-seq]
  [memset memset-seq]

derives-seq := derives-tuple-seq

derives-tuple-seq :=
    derives-tuple
  | derives-tuple-seq derives-tuple

derives-tuple :=
  ( base-specifier )

memdecl-tuple-seq :=
    memdecl-tuple
  | memdecl-tuple-seq memdecl-tuple

memdecl-tuple :=
  explicit-type-var-dcln

memlike-tuple-seq :=
    memlike-tuple
  | memlike-tuple-seq memlike-tuple

memlike-tuple :=
  ( implicit-type-var-dcln )

memset-seq := set-tuple-seq

member-specification := See C++ standard.
base-specifier := See C++ standard.