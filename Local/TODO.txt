AutoFunctor
-----------
granularize pp includes ??

x) Better Syntax Error Checking/Reporting:
  missing type in explicit-type-var-dcln ?
  missing var in "..." ?
  missing type in implicit-type-var-dcln ?
  missing var in "..." ?

Misc.
-----
LocalOperandsSyntaxCheck tests.
ErrorReporting tests.
ERROR_ -> WG_LCL_ERROR_ ?

ExpandN:
  test
  AUTOFUNCTOR -> ...

LclClass:
  SpecNormalizeUnitTest.cc

LclFunction:
  Binder: local namespace to lclfunction namespace?
  Exception specification
  x)move function_type to function_operator
  x) using/aliases for nondependent typenames
  WG_PP_LCLFUNCTION_CGUTILS_FUNCTIONOPERATORUTILS -> WG_PP_LCLFUNCTION_FUNCTIONOPERATORUTILS
  x)*_tpl tests:
    x)move to taking function types as params.
    x)Vary these params with const and reference qualifications.
  x)MacroParamNamesAsVarNamesTpl.cc

Tests: 
  x)comparing arrays cleanup.
  
  //Description:
  //Use these macros to ensure that the declared local function is invoked at least
  //once in the test, else the test will fail. This is to ensure that we don't 
  //forget to call the local function and generate false positives.
  //How to Use:
  //All calls to WG_LCLFUNCTION/_TPL should be replaced with WG_TEST_LCLFUNCTION/_TPL
  //WG_TEST_LCLFUNCTION_MARKCALL should be invoked in the local function body.
  //WG_TEST_LCLFUNCTION_VERIFYCALL should be invoked after the local function 
  //has been invoked.
  //How it Works:
  //WG_TEST_LCLFUNCTION/_TPL will register the pair (Test *, lclfunction_name) 
  //with a global entity
  //using a local RAII object. If neither WG_TEST_LCLFUNCTION_MARKCALL nor 
  //WG_TEST_LCLFUNCTION_VERIFYCALL are called using the same lclfunction name
  //then the test will fail.
  WG_TEST_LCLFUNCTION(...)
  WG_TEST_LCLFUNCTION_MARKCALL(lclfunction_name);
  WG_TEST_LCLFUNCTION_VERIFYCALL(lclfunction_name);