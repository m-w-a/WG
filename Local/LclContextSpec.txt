//----------
//Semantics:
//----------

Note: All terms not defined here should be referenced in AutoFunctorSpec.txt

context-manager:
  1) It does not make sense for a context manager to be 
    qualified const since an object of this type will be used to call the 
    non-const methods onenter and onexit. Hence any const qualifications will
    result in a compile-time error.

adhoc-context-handlers:
  1) At least one handler must be specified.

//---
//BNF
//---

special symbols:
  [...] specifies an optional BNF expression.
terminals: with with_adhoc as on_enter on_exit

lclcontext-usage :=
  lclcontext-start-macro ( lclcontext-spec )
  compound-statement
  WG_LCLCONTEXT_END [;]

lclcontext-start-macro :=
    WG_LCLCONTEXT
  | WG_LCLCONTEXT_TPL
  | WG_LCLCONTEXT_NOEX
  | WG_LCLCONTEXT_NOEX_TPL

lclcontext-spec :=
    with-decln lclcontext-spec
  | with-adhoc-dcln lclcontext-spec
  | with-decln 
  | with-adhoc-decln

with-dcln :=
  with( context-manager ) [ as( type-var-dcln ) ]

// An expression that is or produces a context manager object.
context-manager := 
  type-var-dcln

with-adhoc-decln :=
  with_adhoc( varbind-seq ) adhoc-context-handlers 

adhoc-context-handlers :=
  [onenter( compound-statement )] [onexit( compound-statement )]

compound-statement := See C++ standard.

