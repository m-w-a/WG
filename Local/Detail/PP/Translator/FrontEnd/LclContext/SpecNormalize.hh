#ifndef WG_PP_LCLCONTEXT_SPECNORMALIZE_HH_
#define WG_PP_LCLCONTEXT_SPECNORMALIZE_HH_

#include <boost/preprocessor.hpp>
#include <WG/Local/Detail/PP/PP.hh>
#include <WG/Local/Detail/PP/Translator/FrontEnd/LclContext/Keywords.hh>

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE(spec, istpl, isnoex) \
  WG_PP_LCLFUNCTION_SPEC_NORMALIZE_IMPL(spec, istpl, isnoex)

//###########
//Impl Macros
//###########

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_IMPL(spec, istpl, isnoex) \
  TODO

//------
// Utils
//------

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_EXPAND1(x) x
#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_EXPAND2(x) x
#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_EXPAND3(x) x

//-------
// Parser
//-------

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_PARSE(spec) \
  BOOST_PP_WHILE( \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_PRED, \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP1, \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_INITSTATE(spec) )

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_EXTRACT( \
  whileas_seq, anonbind_seq, anonset_seq, spec_end) \
    (whileas) ( whileas_seq ) \
    (anonbind) ( anonbind_seq ) \
    (anonset) ( anonset_seq )

//~~~~~~~~~~~~~~
// Parser::State
//~~~~~~~~~~~~~~

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_INITSTATE(spec) \
  (NOTHING, NOTHING, NOTHING, spec)

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM(indx, state) \
  BOOST_PP_TUPLE_ELEM(4, indx, state)

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_SEQ_WHILEAS( \
  state, ignored) \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM(0, state)
#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_SEQ_ANONBIND( \
  state, ignored) \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM(1, state)
#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_SEQ_ANONSET( \
  state, ignored) \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM(2, state)
#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_RESTSPEC( \
  state, ignored) \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM(3, state)

//~~~~~~~~~~~~~~~~~~
// Parser::Predicate
//~~~~~~~~~~~~~~~~~~

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_PRED(d, state) \
  BOOST_PP_COMPL( \
    WG_PP_STARTSWITH_BOOST_PP_NIL( \
      WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_RESTSPEC( \
        state, ignore)))

//~~~~~~~~~~~
// Parser::Op
//~~~~~~~~~~~

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP1(d, state) \
  WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP2( \
    state, \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_RESTSPEC(state) )

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP2(state, spec) \
  ( \
    BOOST_PP_IIF( \
      WG_PP_LCLCONTEXT_KEYWORDS_STARTSWITH_WITH(spec), \
      WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP_SEQ_WHILEAS1, \
      WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_SEQ_WHILEAS1) \
    (state, spec) , \
    BOOST_PP_IIF( \
      WG_PP_LCLCONTEXT_KEYWORDS_STARTSWITH_ANONBIND(spec), \
      WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP_SEQ_ANONBIND1, \
      WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_SEQ_ANONBIND) \
    (state, spec) , \
    BOOST_PP_IIF( \
      WG_PP_LCLCONTEXT_KEYWORDS_STARTSWITH_ANONSET(spec), \
      WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP_SEQ_ANONSET1, \
      WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_SEQ_ANONSET) \
    (state, spec) , \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP_REDUCESPEC1(spec) \
  )

//~~~~~~~~~~~~~~~~~~~~~~~
// Parser::Op::ReduceSpec
//~~~~~~~~~~~~~~~~~~~~~~~

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP_REDUCESPEC1(spec) \
  BOOST_PP_EXPR_IIF( \
    WG_PP_LCLCONTEXT_KEYWORDS_STARTSWITH_WITH(spec), \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP_REDUCESPEC_WITHAS1) \
  BOOST_PP_EXPR_IIF( \
    WG_PP_LCLCONTEXT_KEYWORDS_STARTSWITH_ANONBIND(spec), \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP_REDUCESPEC_ANONBIND) \
  BOOST_PP_EXPR_IIF( \
    WG_PP_LCLCONTEXT_KEYWORDS_STARTSWITH_ANONSEPC(spec), \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP_REDUCESPEC_ANONSPEC) \
  (spec)

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP_REDUCESPEC_WITHAS1(spec) \
  WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP_REDUCESPEC_WITHAS2( \
    BOOST_PP_TUPLE_EAT(1) WG_PP_LCLCONTEXT_KEYWORDS_EAT_HEADKEYWORD(spec) )

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP_REDUCESPEC_WITHAS2(spec) \
  BOOST_PP_IIF( \
    WG_PP_LCLCONTEXT_KEYWORDS_STARTSWITH_AS(spec), \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP_REDUCESPEC_WITHAS3, \
    WG_PP_IDENTITY) (spec)

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_OP_REDUCESPEC_WITHAS3(spec) \
  WG_PP_LCLFUNCTION_SPEC_NORMALIZE_EXPAND1( \
    BOOST_PP_TUPLE_EAT(1) WG_PP_LCLCONTEXT_KEYWORDS_EAT_HEADKEYWORD(spec) )

//~~~~~~~~~~~~~~~~~~~~~~~
// Parser::Op::SeqWhileAs
//~~~~~~~~~~~~~~~~~~~~~~~

#defien WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_SEQ_WHILEAS1( \
  state, spec) \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_SEQ_WHILEAS(state) \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_EXPAND2( \
      WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_SEQ_WHILEAS2 \
      BOOST_PP_LPAREN() \
        WG_PP_ADDCOMMA_AFTERTUPLE_ARITY1 \
        WG_PP_LCLCONTEXT_KEYWORDS_EAT_HEADKEYWORD(spec) \
      BOOST_PP_RPAREN() )

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_SEQ_WHILEAS2( \
  while_tuple, spec) \
    while_tuple \
    BOOST_PP_IIF( \
      WG_PP_LCLCONTEXT_KEYWORDS_STARTSWITH_AS(spec), \
      WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_SEQ_WHILEAS3, \
      (BOOST_PP_NIL) WG_PP_MAPTO_NOTHING_ARG1) (spec)

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_SEQ_WHILEAS3(spec) \
  WG_PP_LCLFUNCTION_SPEC_NORMALIZE_EXPAND3( \
    WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_SEQ_WHILEAS4 \
    BOOST_PP_LPAREN() \
      WG_PP_ADDCOMMA_AFTERTUPLE_ARITY1 \
      WG_PP_LCLCONTEXT_KEYWORDS_EAT_HEADKEYWORD(spec) \
    BOOST_PP_RPAREN() )

#define WG_PP_LCLFUNCTION_SPEC_NORMALIZE_WHILELOOP_STATEELEM_SEQ_WHILEAS4( \
  as_tuple, restspec) \
    as_tuple

#endif /* WG_PP_LCLCONTEXT_SPECNORMALIZE_HH_ */
